WITH account_data AS (
  -- Output information about created accounts
  SELECT
    s.date AS date,
    sp.country AS country,
    a.send_interval AS send_interval,
    SUM(a.is_verified) AS is_verified, -- Sum the number of verified accounts
    SUM(a.is_unsubscribed) AS is_unsubscribed, -- Sum the number of unsubscribed accounts
    COUNT(DISTINCT a.id) AS account_cnt, -- Count of created accounts
    0 AS sent_msg,
    0 AS open_msg,
    0 AS visit_msg
  FROM
    `data-analytics-mate.DA.session_params` AS sp
  JOIN
    `data-analytics-mate.DA.session` AS s ON sp.ga_session_id = s.ga_session_id
  JOIN
    `data-analytics-mate.DA.account_session` AS acs ON s.ga_session_id = acs.ga_session_id
  JOIN
    `data-analytics-mate.DA.account` AS a ON acs.account_id = a.id
  GROUP BY
    s.date, sp.country, a.send_interval
),
email_metrics AS (
  -- Output email metrics
  SELECT
    DATE_ADD(s.date, INTERVAL es.sent_date DAY) AS date,
    sp.country AS country,
    NULL AS send_interval,
    NULL AS is_verified,
    NULL AS is_unsubscribed,
    0 AS account_cnt,
    COUNT(DISTINCT es.id_message) AS sent_msg, -- Count of sent emails
    COUNT(eo.id_message) AS open_msg, -- Count of opened emails
    COUNT(ev.id_account) AS visit_msg -- Count of email clicks/visits
  FROM
    `DA.email_sent` es
  JOIN
    `DA.account` a ON a.id = es.id_account
  LEFT JOIN
    `DA.email_open` eo ON es.id_message = eo.id_message
  LEFT JOIN
    `DA.email_visit` ev ON ev.id_message = es.id_message
  JOIN
    `DA.account_session` acs ON acs.account_id = a.id
  JOIN
    `DA.session` s ON s.ga_session_id = acs.ga_session_id
  JOIN
    `DA.session_params` sp ON s.ga_session_id = sp.ga_session_id
  GROUP BY
    date, sp.country
),


-- Combine using UNION ALL and aggregate data
union_data AS (
  SELECT
    date,
    country,
    MAX(send_interval) AS send_interval,     -- Use MAX to select non-null value
    MAX(is_verified) AS is_verified,        
    MAX(is_unsubscribed) AS is_unsubscribed,
    SUM(account_cnt) AS account_cnt,        
    SUM(sent_msg) AS sent_msg,              
    SUM(open_msg) AS open_msg,              
    SUM(visit_msg) AS visit_msg              
  FROM (
    SELECT * FROM account_data
    UNION ALL
    SELECT * FROM email_metrics
  ) AS combined
  GROUP BY
    date, country
),


-- Add window functions to calculate total sent messages and total created accounts.
total_cnt AS (
  SELECT
    date,
    country,
    send_interval,
    is_verified,
    is_unsubscribed,
    account_cnt,
    sent_msg,
    open_msg,
    visit_msg,
    SUM(account_cnt) OVER (PARTITION BY country) AS total_country_account_cnt, -- Total number of accounts per country
    SUM(sent_msg) OVER (PARTITION BY country) AS total_country_sent_cnt -- Total number of sent emails per country
  FROM union_data
),


final AS (
  SELECT
    date,
    country,
    send_interval,
    is_verified,
    account_cnt,
    sent_msg,
    open_msg,
    visit_msg,
    total_country_account_cnt,
    total_country_sent_cnt,
    DENSE_RANK() OVER (ORDER BY total_country_sent_cnt DESC) AS rank_total_country_sent_cnt, -- Ranking of countries by total sent messages
    DENSE_RANK() OVER (ORDER BY total_country_account_cnt DESC) AS rank_total_country_account_cnt -- Ranking of countries by total accounts created
  FROM total_cnt
)


SELECT
  date,
  country,
  send_interval,
  is_verified,
  account_cnt,
  sent_msg,
  open_msg,
  visit_msg,
  total_country_account_cnt,
  total_country_sent_cnt,
  rank_total_country_account_cnt,
  rank_total_country_sent_cnt
FROM final
WHERE rank_total_country_account_cnt <= 10 OR rank_total_country_sent_cnt <= 10
ORDER BY country DESC, date
